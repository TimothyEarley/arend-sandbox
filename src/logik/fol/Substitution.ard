\import Data.List
\import Function.Meta
\import lambda.GeneralContext
\import logik.fol.FOL

\instance FOLTermSub {L : Language} : SubstOperations
  | Type => \Sigma
  | Term c () => TermIn c
  | s-var l => var (∋.toIndex l)
  | rename r t => {?}
  | extends => {?}
  | subst => {?}
\where {
  \func TermIn {L : Language} (c : Context (\Sigma)) : \Set => Term (length (Context.toList c))

  \func rename {L : Language} {gamma delta : Context (\Sigma)} (r : Rename gamma delta) (t : TermIn gamma) : TermIn delta
    \elim t
      | var f => var (∋.toIndex $ r $ ∋.fromIndex f)
      | apply f d => {?}
}
\import Data.Or
\import Logic
\import Star
\import lambda.unityped.Lambda
\import lambda.unityped.Reduction

\data Value {ctx : UniContext} {T : UniType} (t : ctx u⊢ T) \elim t
  | lam t => Lam-Value

\func IsCBVReduction {ctx : UniContext} {T : UniType} {t : ctx u⊢ T} (r : Reduction t) : \Prop \elim t, r
  | ⋅ t t1, R-App1 r => IsCBVReduction r
  | ⋅ t t1, R-App2 r => \Sigma (Value t) (IsCBVReduction r)
  | ⋅ (lam t) t1, R-Beta => Value t1
  | lam t, R-Lam r => Empty

\where {
  \func valueNoCBVReduction {ctx : UniContext} {T : UniType} {t : ctx u⊢ T} (v : Value t) (r : Reduction t) (cbv : IsCBVReduction r) : Empty

}

\func cbvReduceStep \alias \infix 6 ->1_u_cbv {ctx : UniContext} {T : UniType} (t t' : ctx u⊢ T)
  => \Sigma (r : Reduction t) (IsCBVReduction r) (reduce r = t')

\func cbvReduces \alias \infix 6 ->*_u_cbv {ctx : UniContext} {T : UniType} (t t' : ctx u⊢ T)
  => Star (->1_u_cbv) t t'